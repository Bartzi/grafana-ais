{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "a5fdb23b-bc73-4365-8a58-304d37116064"
      },
      "gridPos": {
        "h": 19,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "centerLatitude": -63.013,
        "centerLongitude": -57.913,
        "receiverLatitude": -63.313,
        "receiverLongitude": -57.913,
        "seriesCountSize": "sm",
        "showSeriesCount": false,
        "strokeWidth": 3,
        "text": "Default value of text input option",
        "zoom": 9
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a5fdb23b-bc73-4365-8a58-304d37116064"
          },
          "query": "import \"influxdata/influxdb/schema\"\n\nfrom(bucket: \"ais\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ais\")\n  |> map(fn: (r) => ({ r with _value: string(v: r._value) })) \n  |> group(columns: [\"ship_id\"])\n  |> schema.fieldsAsCols()",
          "refId": "A"
        }
      ],
      "title": "Panel Title",
      "type": "dlr-ais-panel"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "a5fdb23b-bc73-4365-8a58-304d37116064"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "MMSI"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 19
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Time"
          }
        ]
      },
      "pluginVersion": "10.2.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "a5fdb23b-bc73-4365-8a58-304d37116064"
          },
          "query": "import \"influxdata/influxdb/schema\"\nimport \"date\"\n\nfrom(bucket: \"ais\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ais\")\n  |> filter(fn: (r) => r[\"_field\"] == \"course\" or r[\"_field\"] == \"heading\" or r[\"_field\"] == \"mmsi\" or r[\"_field\"] == \"shipname\")\n  |> sort(columns: [\"_time\"], desc: false)\n  |> schema.fieldsAsCols()\n  |> filter(fn: (r) => r[\"shipname\"] != \"Unknown\")\n  |> last(column: \"_time\")\n  |> set(key: \"now\", value: string(v: now()))\n  |> map(fn: (r) => ({\n    r with ago: string(\n        v: duration(\n            v:  uint(v: date.truncate(t: time(v: r[\"now\"]), unit: 1m)) - \n                uint(v: date.truncate(t: r[\"_time\"], unit: 1m))\n        )\n    )\n  }))\n  |> keep(columns: [\"shipname\", \"course\", \"heading\", \"_time\", \"mmsi\", \"ago\"])\n  |> rename(columns: {shipname: \"Name\", course: \"Course\", heading: \"Heading\", mmsi: \"MMSI\", ago: \"Last Seen\", _time: \"Time\"})",
          "refId": "A"
        }
      ],
      "title": "Panel Title",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {
              "Course": 2,
              "Heading": 3,
              "Last Seen": 4,
              "MMSI": 0,
              "Name": 1,
              "Time": 5
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-2d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Provisioned ais-panel dashboard",
  "uid": "df61ce9f-b21c-468c-ba3e-5c407e84faa2",
  "version": 1,
  "weekStart": ""
}